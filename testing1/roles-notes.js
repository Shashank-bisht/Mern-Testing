[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import { render, screen } from '@testing-library/react';\nfunction RoleExample() {\n  return (\n    <div>\n      <a href=\"/\"> Link</a>\n      <button>Button</button>\n      <footer>Contentinfo</footer>\n      <h1>Heading</h1>\n      <header>Banner</header>\n      <img alt=\"description\" /> Img\n      <input type=\"checkbox\" /> Checkbox\n      <input type=\"number\" /> Spinbutton\n      <input type=\"radio\" /> Radio\n      <input type=\"text\" /> Textbox\n      <li>Listitem</li>\n      <ul>Listgroup</ul>\n    </div>\n  );\n}\nrender(<RoleExample/>)","type":"code","id":"v5glp"},{"content":"test('can find elements by role',()=>{\r\n  render(<RoleExample/>)\r\n  const roles = [\r\n    'link',\r\n    'button',\r\n    'contentinfo',\r\n    'heading',\r\n    'banner',\r\n    'img',\r\n    'checkbox',\r\n    'spinbutton',\r\n    'radio',\r\n    'textbox',\r\n    'listitem',\r\n    'list'\r\n\r\n  ];\r\n  for(let role of roles){\r\n    const el = screen.getByRole(role)\r\n    expect(el).toBeInTheDocument()\r\n  }\r\n})","type":"code","id":"bpxhb"},{"content":"function AccessibleName(){\r\n  return(\r\n    <div>\r\n    <button>Submit</button>\r\n    <button>Cancel</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<AccessibleName/>)","type":"code","id":"c5d2h"},{"content":"test('can select by accessible name',()=>{\r\n  render(<AccessibleName/>)\r\n  const submitButton = screen.getByRole('button',\r\n  {\r\n    name: /submit/i\r\n  });\r\n  const cancelButton = screen.getByRole('button', {\r\n    name: /cancel/i\r\n  });\r\n  expect(submitButton).toBeInTheDocument();\r\n  expect(cancelButton).toBeInTheDocument();\r\n})","type":"code","id":"43u6f"},{"content":"function MoreNames(){\r\n  return(\r\n    <div>\r\n    <label htmlFor=\"email\">Email</label>\r\n    <input id=\"email\"/>\r\n    <label htmlFor=\"search\">Search</label>\r\n    <input id=\"search\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<MoreNames/>)","type":"code","id":"6wqhh"},{"content":"test('shows an email and search input',()=>{\r\n  render(<MoreNames/>)\r\n\r\n  const emailInput = screen.getByRole('textbox',{\r\n  name: /email/i\r\n  })\r\n  const searchInput = screen.getByRole ('textbox',  {\r\n    name: /search/i\r\n  })\r\n  expect(emailInput).toBeInTheDocument();\r\n  expect(searchInput).toBeInTheDocument();\r\n})","type":"code","id":"mkhnj"},{"content":"function IconButtons(){\r\n  return(\r\n    <div>\r\n    <button aria-label=\"sign in\">\r\n    <svg/>\r\n    </button>\r\n    <button aria-label=\"sign out\">\r\n    <svg/>\r\n    </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nrender(<IconButtons/>)","type":"code","id":"609jg"},{"content":"test('find elements based on label',()=>{\r\n  render(<IconButtons/>)\r\n\r\n  const signinbutton = screen.getByRole('button',{\r\n    name: /sign in/i\r\n  })\r\n  const signoutbutton = screen.getByRole('button',{\r\n    name: /sign out/i\r\n  })\r\n  expect(signinbutton).toBeInTheDocument();\r\n    expect(signoutbutton).toBeInTheDocument();\r\n  })","type":"code","id":"m8enl"}]